{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["FaceRecognition","imageURL","box","className","src","alt","id","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","onClick","href","SignIn","htmlFor","type","value","Register","for","Logo","options","max","height","width","brain","ImageLinkForm","onInputChange","onButtonClick","onChange","Rank","app","Clarifai","App","apiKey","particlesOption","particles","number","density","enable","area","factor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","route","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.60694062.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageURL, box}) => {\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"absolute\">\r\n        <img className=\"img\" src={imageURL} alt=\"\" id=\"inputImage\" />\r\n        <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default FaceRecognition;","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n      <nav>\r\n          <p onClick={() => onRouteChange('signout')} href=\"#\">\r\n            Sign Out\r\n          </p>\r\n      </nav>\r\n      )\r\n    } else {\r\n      return (\r\n        <nav>\r\n          <p onClick={() => onRouteChange('register')}>Register</p>\r\n          <p onClick={() => onRouteChange('signin')}>Sign In</p>\r\n        </nav>\r\n      )\r\n    }\r\n    \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './SignIn.css';\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n  return (\r\n    <section id=\"card\">\r\n      <form>\r\n        <legend>Sign In</legend>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" />\r\n        </div>\r\n        <div className=\"submit-form\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Sign in\"\r\n            onClick={() => onRouteChange(\"home\")}\r\n          />\r\n        </div>\r\n        <div className=\"register\">\r\n          <p onClick={() => onRouteChange(\"register\")}> Register</p>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React from \"react\";\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n  return (\r\n    <section id=\"card\">\r\n      <form>\r\n        <legend>Register</legend>\r\n        <div className=\"form-group\">\r\n          <label for=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" />\r\n        </div>\r\n        <div className=\"submit-form\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n            onClick={() => onRouteChange(\"signin\")}\r\n          />\r\n        </div>\r\n        \r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"tilt-box\">\r\n      <Tilt\r\n        className=\"Tilt\"\r\n        options={{ max: 55 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner\">\r\n          <img src={brain} alt=\"logo\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonClick }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"lead\">\r\n        {\"This Magic Brain will detect faces in your pictures. Give it a try. \"}\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"box center\" id=\"box\">\r\n          <input type=\"text\" onChange={ onInputChange }/>\r\n          <button onClick={ onButtonClick }>Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './Rank.css'\r\n\r\nconst Rank = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"white f2\">\r\n        {'John,  your current rank is ...'}\r\n      </div>\r\n      <div className=\"white f1\">\r\n        {'#5'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React, { Component } from 'react';\r\nimport Clarifai from 'clarifai';\r\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\r\nimport Particles from \"react-particles-js\";\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport SignIn from \"./components/SignIn/SignIn\";\r\nimport Register from \"./components/Register/Register\";\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport './App.css';\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: \"e0e859cc6a7c4ef28e7350e1d8c25000\",\r\n});\r\n\r\nconst particlesOption = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        area: 800,\r\n        factor: 1000\r\n      }\r\n    },\r\n    \r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageURL: '',\r\n      box: {},\r\n      route: \"signin\",\r\n      isSignedIn: false\r\n    }\r\n  } \r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputImage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height ,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    console.log(box)\r\n    this.setState({ box: box });\r\n   }\r\n\r\n  onRouteChange = (route) => {\r\n \r\n    if (route === 'signout') {\r\n      this.setState({ isSignedIn: false})\r\n    } else if (route === 'home') {\r\n      this.setState({ isSignedIn: true})\r\n    }\r\n\r\n    this.setState({ route: route });\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n  onButtonClick = () => {\r\n    this.setState({imageURL: this.state.input})\r\n    app.models\r\n      .predict(\r\n        Clarifai.FACE_DETECT_MODEL,\r\n        this.state.input\r\n      )\r\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\r\n      .catch(err => console.log(err));\r\n\r\n    console.log('Clicked');\r\n  }\r\n  \r\n  render() {\r\n    const { isSignedIn, route, box, imageURL } = this.state;\r\n    return (\r\n      \r\n      <div className=\"App\">\r\n        <Particles params={particlesOption} className=\"particles\" />\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\r\n        { route === \"home\" ? (\r\n          <div>\r\n            <Logo />\r\n            <Rank />\r\n            <ImageLinkForm\r\n              onInputChange={this.onInputChange}\r\n              onButtonClick={this.onButtonClick}\r\n            />\r\n            <FaceRecognition\r\n              box={box}\r\n              imageURL={imageURL}\r\n            />\r\n          </div>\r\n        ) : route === \"register\" ? (\r\n          <Register onRouteChange={this.onRouteChange} />\r\n        ) : (\r\n          <SignIn onRouteChange={this.onRouteChange} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.974e7836.png\";"],"sourceRoot":""}